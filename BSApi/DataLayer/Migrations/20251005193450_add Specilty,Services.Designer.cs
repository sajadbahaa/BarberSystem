// <auto-generated />
using System;
using DTLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251005193450_add Specilty,Services")]
    partial class addSpeciltyServices
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataLayer.Entities.People", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonID"));

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("varchar");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Nvarchar");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Nvarchar");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("varchar");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Nvarchar");

                    b.HasKey("PersonID");

                    b.ToTable("People");
                });

            modelBuilder.Entity("DataLayer.Entities.ServicesDetials", b =>
                {
                    b.Property<short>("ServiceDetilasID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ServiceDetilasID"));

                    b.Property<short>("ServiceID")
                        .HasColumnType("smallint");

                    b.Property<short>("SpecilityID")
                        .HasColumnType("smallint");

                    b.HasKey("ServiceDetilasID");

                    b.HasIndex("ServiceID")
                        .IsUnique();

                    b.HasIndex("SpecilityID");

                    b.ToTable("ServicesDetials");
                });

            modelBuilder.Entity("DataLayer.Entities.Servics", b =>
                {
                    b.Property<short>("ServiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("ServiceID"));

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Nvarchar");

                    b.Property<TimeSpan>("duration")
                        .HasColumnType("time");

                    b.Property<decimal>("price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ServiceID");

                    b.ToTable("servics");
                });

            modelBuilder.Entity("DataLayer.Entities.Speclityes", b =>
                {
                    b.Property<short>("SpecilityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("SpecilityID"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("Nvarchar");

                    b.Property<bool>("Enabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("SpecilityName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Nvarchar");

                    b.HasKey("SpecilityID");

                    b.ToTable("Speclityes");
                });

            modelBuilder.Entity("DataLayer.Entities.ServicesDetials", b =>
                {
                    b.HasOne("DataLayer.Entities.Servics", "servics")
                        .WithOne("servicesDetials")
                        .HasForeignKey("DataLayer.Entities.ServicesDetials", "ServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataLayer.Entities.Speclityes", "Speclityes")
                        .WithMany("ServicesDetials")
                        .HasForeignKey("SpecilityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Speclityes");

                    b.Navigation("servics");
                });

            modelBuilder.Entity("DataLayer.Entities.Servics", b =>
                {
                    b.Navigation("servicesDetials")
                        .IsRequired();
                });

            modelBuilder.Entity("DataLayer.Entities.Speclityes", b =>
                {
                    b.Navigation("ServicesDetials");
                });
#pragma warning restore 612, 618
        }
    }
}
